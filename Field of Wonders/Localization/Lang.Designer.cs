//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Field_of_Wonders.Localization {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Lang {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Lang() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Field_of_Wonders.Localization.Lang", typeof(Lang).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текст ответа не может быть пустым..
        /// </summary>
        public static string Error_AnswerCannotBeEmpty {
            get {
                return ResourceManager.GetString("Error_AnswerCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла ошибка в UI потоке: {0}.
        /// </summary>
        public static string Error_DispatcherUnhandledException_Format {
            get {
                return ResourceManager.GetString("Error_DispatcherUnhandledException_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текст вопроса не может быть пустым..
        /// </summary>
        public static string Error_QuestionCannotBeEmpty {
            get {
                return ResourceManager.GetString("Error_QuestionCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Непредвиденная ошибка при инициализации главного окна: {0}.
        /// </summary>
        public static string Error_UnexpectedInitializationFailed_Format {
            get {
                return ResourceManager.GetString("Error_UnexpectedInitializationFailed_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необработанное исключение: {0}.
        /// </summary>
        public static string Error_UnhandledException_Format {
            get {
                return ResourceManager.GetString("Error_UnhandledException_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла необработанная ошибка без дополнительных сведений..
        /// </summary>
        public static string Error_UnhandledException_NoExceptionObject {
            get {
                return ResourceManager.GetString("Error_UnhandledException_NoExceptionObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Завершение работы приложения с кодом {0}..
        /// </summary>
        public static string Log_AppExiting {
            get {
                return ResourceManager.GetString("Log_AppExiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Культура &apos;{0}&apos; успешно применена..
        /// </summary>
        public static string Log_ApplyingCulture_Success {
            get {
                return ResourceManager.GetString("Log_ApplyingCulture_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Культура {0} успешно применена к потокам..
        /// </summary>
        public static string Log_CultureApplied {
            get {
                return ResourceManager.GetString("Log_CultureApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сброс буферов логов перед закрытием....
        /// </summary>
        public static string Log_FlushingLogs {
            get {
                return ResourceManager.GetString("Log_FlushingLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось получить набор ресурсов для культуры &apos;{0}&apos;..
        /// </summary>
        public static string Log_GetResourceSetFailed_Format {
            get {
                return ResourceManager.GetString("Log_GetResourceSetFailed_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка ввода-вывода при загрузке файла настроек &apos;{0}&apos;: {1}..
        /// </summary>
        public static string Log_LoadSettings_IOException_Format {
            get {
                return ResourceManager.GetString("Log_LoadSettings_IOException_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка десериализации или чтения файла настроек &apos;{0}&apos;: {1}. Файл может быть поврежден..
        /// </summary>
        public static string Log_LoadSettings_ReadFailed_Format {
            get {
                return ResourceManager.GetString("Log_LoadSettings_ReadFailed_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Непредвиденная ошибка при загрузке настроек из файла &apos;{0}&apos;: {1}..
        /// </summary>
        public static string Log_LoadSettings_Unexpected_Format {
            get {
                return ResourceManager.GetString("Log_LoadSettings_Unexpected_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Главное окно успешно инициализировано..
        /// </summary>
        public static string Log_MainWindowInitialized {
            get {
                return ResourceManager.GetString("Log_MainWindowInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открытие главного окна....
        /// </summary>
        public static string Log_MainWindowOpening {
            get {
                return ResourceManager.GetString("Log_MainWindowOpening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обнаружена и добавлена нейтральная культура: {0}.
        /// </summary>
        public static string Log_NeutralCultureAdded_Format {
            get {
                return ResourceManager.GetString("Log_NeutralCultureAdded_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имя игрока не введено, используется имя по умолчанию: &apos;{0}&apos;..
        /// </summary>
        public static string Log_PlayerNameDefault_Format {
            get {
                return ResourceManager.GetString("Log_PlayerNameDefault_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игроку &apos;{0}&apos; добавлено {1} очков. Текущий счет: {2} (было {3})..
        /// </summary>
        public static string Log_PlayerScoreAdded_Format {
            get {
                return ResourceManager.GetString("Log_PlayerScoreAdded_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Счет игрока &apos;{0}&apos; сброшен (было {1})..
        /// </summary>
        public static string Log_PlayerScoreReset_Format {
            get {
                return ResourceManager.GetString("Log_PlayerScoreReset_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось определить директорию для сохранения файла настроек: {0}..
        /// </summary>
        public static string Log_SaveSettings_DirectoryNotFound_Format {
            get {
                return ResourceManager.GetString("Log_SaveSettings_DirectoryNotFound_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка ввода-вывода при сохранении файла настроек &apos;{0}&apos;: {1}..
        /// </summary>
        public static string Log_SaveSettings_IOException_Format {
            get {
                return ResourceManager.GetString("Log_SaveSettings_IOException_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка доступа при сохранении файла настроек &apos;{0}&apos;. Проверьте права на запись..
        /// </summary>
        public static string Log_SaveSettings_Unauthorized_Format {
            get {
                return ResourceManager.GetString("Log_SaveSettings_Unauthorized_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Непредвиденная ошибка при сохранении настроек: {0}..
        /// </summary>
        public static string Log_SaveSettings_Unexpected_Format {
            get {
                return ResourceManager.GetString("Log_SaveSettings_Unexpected_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Файл настроек &apos;{0}&apos; удален (например, т.к. был пуст или поврежден)..
        /// </summary>
        public static string Log_SettingsFileDeleted {
            get {
                return ResourceManager.GetString("Log_SettingsFileDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось удалить файл настроек &apos;{0}&apos;..
        /// </summary>
        public static string Log_SettingsFileDeleteFailed {
            get {
                return ResourceManager.GetString("Log_SettingsFileDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки успешно загружены из файла &apos;{0}&apos;..
        /// </summary>
        public static string Log_SettingsLoaded {
            get {
                return ResourceManager.GetString("Log_SettingsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки успешно сохранены в файл &apos;{0}&apos;..
        /// </summary>
        public static string Log_SettingsSaved {
            get {
                return ResourceManager.GetString("Log_SettingsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обнаружена и добавлена специфичная культура: {0}.
        /// </summary>
        public static string Log_SpecificCultureAdded_Format {
            get {
                return ResourceManager.GetString("Log_SpecificCultureAdded_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необработанное исключение в AppDomain. Завершение: {0}..
        /// </summary>
        public static string Log_UnhandledExceptionAppDomain {
            get {
                return ResourceManager.GetString("Log_UnhandledExceptionAppDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необработанное исключение в AppDomain без объекта Exception. Завершение: {0}..
        /// </summary>
        public static string Log_UnhandledExceptionAppDomain_NoException {
            get {
                return ResourceManager.GetString("Log_UnhandledExceptionAppDomain_NoException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Необработанное исключение в Dispatcher (UI поток)..
        /// </summary>
        public static string Log_UnhandledExceptionDispatcher {
            get {
                return ResourceManager.GetString("Log_UnhandledExceptionDispatcher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Поле Чудес.
        /// </summary>
        public static string MainWindow_Title {
            get {
                return ResourceManager.GetString("MainWindow_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Игрок.
        /// </summary>
        public static string Player_DefaultName {
            get {
                return ResourceManager.GetString("Player_DefaultName", resourceCulture);
            }
        }
    }
}
