<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_AnswerCannotBeEmpty" xml:space="preserve">
    <value>Текст ответа не может быть пустым.</value>
    <comment>Сообщение об ошибке при создании Puzzle.</comment>
  </data>
  <data name="Error_DispatcherUnhandledException_Format" xml:space="preserve">
    <value>Произошла ошибка в UI потоке: {0}</value>
    <comment>Текст сообщения об ошибке для пользователя при ошибке в UI. {0} - сообщение исключения.</comment>
  </data>
  <data name="Error_QuestionCannotBeEmpty" xml:space="preserve">
    <value>Текст вопроса не может быть пустым.</value>
    <comment>Сообщение об ошибке при создании Puzzle.</comment>
  </data>
  <data name="Error_UnexpectedInitializationFailed_Format" xml:space="preserve">
    <value>Непредвиденная ошибка при инициализации главного окна: {0}</value>
    <comment>Текст сообщения при ошибке инициализации MainWindow. {0} - сообщение исключения.</comment>
  </data>
  <data name="Error_UnhandledException_Format" xml:space="preserve">
    <value>Необработанное исключение: {0}</value>
    <comment>Текст сообщения об ошибке для пользователя при необработанном исключении. {0} - сообщение исключения.</comment>
  </data>
  <data name="Error_UnhandledException_NoExceptionObject" xml:space="preserve">
    <value>Произошла необработанная ошибка без дополнительных сведений.</value>
    <comment>Текст сообщения об ошибке, если исключение не содержит объект Exception.</comment>
  </data>
  <data name="Log_AppExiting" xml:space="preserve">
    <value>Завершение работы приложения с кодом {0}.</value>
    <comment>Сообщение в логе при выходе из приложения. {0} - код выхода.</comment>
  </data>
  <data name="Log_ApplyingCulture_Success" xml:space="preserve">
    <value>Культура '{0}' успешно применена.</value>
    <comment>Сообщение в логе после успешного применения культуры. {0} - код культуры (например, ru-RU).</comment>
  </data>
  <data name="Log_CultureApplied" xml:space="preserve">
    <value>Культура {0} успешно применена к потокам.</value>
    <comment>Сообщение в логе после успешного применения культуры к потокам. {0} - код культуры.</comment>
  </data>
  <data name="Log_FlushingLogs" xml:space="preserve">
    <value>Сброс буферов логов перед закрытием...</value>
    <comment>Сообщение в логе перед закрытием логгера.</comment>
  </data>
  <data name="Log_GetResourceSetFailed_Format" xml:space="preserve">
    <value>Не удалось получить набор ресурсов для культуры '{0}'.</value>
    <comment>Сообщение в логе при ошибке получения ResourceSet. {0} - код культуры.</comment>
  </data>
  <data name="Log_LoadSettings_IOException_Format" xml:space="preserve">
    <value>Ошибка ввода-вывода при загрузке файла настроек '{0}': {1}.</value>
    <comment>Сообщение в логе при ошибке IO во время загрузки настроек. {0} - имя файла, {1} - сообщение ошибки.</comment>
  </data>
  <data name="Log_LoadSettings_ReadFailed_Format" xml:space="preserve">
    <value>Ошибка десериализации или чтения файла настроек '{0}': {1}. Файл может быть поврежден.</value>
    <comment>Сообщение в логе при ошибке чтения/десериализации файла настроек. {0} - имя файла, {1} - сообщение ошибки.</comment>
  </data>
  <data name="Log_LoadSettings_Unexpected_Format" xml:space="preserve">
    <value>Непредвиденная ошибка при загрузке настроек из файла '{0}': {1}.</value>
    <comment>Сообщение в логе при другой ошибке загрузки настроек. {0} - имя файла, {1} - сообщение ошибки.</comment>
  </data>
  <data name="Log_MainWindowInitialized" xml:space="preserve">
    <value>Главное окно успешно инициализировано.</value>
    <comment>Сообщение в логе после успешного показа MainWindow.</comment>
  </data>
  <data name="Log_MainWindowOpening" xml:space="preserve">
    <value>Открытие главного окна...</value>
    <comment>Сообщение в логе перед показом MainWindow.</comment>
  </data>
  <data name="Log_NeutralCultureAdded_Format" xml:space="preserve">
    <value>Обнаружена и добавлена нейтральная культура: {0}</value>
    <comment>Сообщение в логе при обнаружении нейтральной культуры. {0} - код культуры.</comment>
  </data>
  <data name="Log_PlayerNameDefault_Format" xml:space="preserve">
    <value>Имя игрока не введено, используется имя по умолчанию: '{0}'.</value>
    <comment>Сообщение в логе, когда используется имя игрока по умолчанию. {0} - имя по умолчанию.</comment>
  </data>
  <data name="Log_PlayerScoreAdded_Format" xml:space="preserve">
    <value>Игроку '{0}' добавлено {1} очков. Текущий счет: {2} (было {3}).</value>
    <comment>Сообщение в логе при изменении счета игрока. {0} - имя, {1} - добавленные очки, {2} - новый счет, {3} - старый счет.</comment>
  </data>
  <data name="Log_PlayerScoreReset_Format" xml:space="preserve">
    <value>Счет игрока '{0}' сброшен (было {1}).</value>
    <comment>Сообщение в логе при сбросе счета игрока (банкротство). {0} - имя, {1} - старый счет.</comment>
  </data>
  <data name="Log_SaveSettings_DirectoryNotFound_Format" xml:space="preserve">
    <value>Не удалось определить директорию для сохранения файла настроек: {0}.</value>
    <comment>Сообщение в логе, если не удалось получить путь к директории. {0} - полный путь к файлу.</comment>
  </data>
  <data name="Log_SaveSettings_IOException_Format" xml:space="preserve">
    <value>Ошибка ввода-вывода при сохранении файла настроек '{0}': {1}.</value>
    <comment>Сообщение в логе при ошибке IO во время сохранения. {0} - имя файла, {1} - сообщение ошибки.</comment>
  </data>
  <data name="Log_SaveSettings_Unauthorized_Format" xml:space="preserve">
    <value>Ошибка доступа при сохранении файла настроек '{0}'. Проверьте права на запись.</value>
    <comment>Сообщение в логе при ошибке прав доступа. {0} - полный путь к файлу.</comment>
  </data>
  <data name="Log_SaveSettings_Unexpected_Format" xml:space="preserve">
    <value>Непредвиденная ошибка при сохранении настроек: {0}.</value>
    <comment>Сообщение в логе при другой ошибке сохранения. {0} - сообщение ошибки.</comment>
  </data>
  <data name="Log_SettingsFileDeleted" xml:space="preserve">
    <value>Файл настроек '{0}' удален (например, т.к. был пуст или поврежден).</value>
    <comment>Сообщение в логе (уровень Debug) при удалении файла настроек. {0} - имя файла.</comment>
  </data>
  <data name="Log_SettingsFileDeleteFailed" xml:space="preserve">
    <value>Не удалось удалить файл настроек '{0}'.</value>
    <comment>Сообщение в логе (уровень Warning) при ошибке удаления файла настроек. {0} - имя файла.</comment>
  </data>
  <data name="Log_SettingsLoaded" xml:space="preserve">
    <value>Настройки успешно загружены из файла '{0}'.</value>
    <comment>Сообщение в логе при успешной загрузке настроек. {0} - имя файла.</comment>
  </data>
  <data name="Log_SettingsSaved" xml:space="preserve">
    <value>Настройки успешно сохранены в файл '{0}'.</value>
    <comment>Сообщение в логе при успешном сохранении настроек. {0} - имя файла.</comment>
  </data>
  <data name="Log_SpecificCultureAdded_Format" xml:space="preserve">
    <value>Обнаружена и добавлена специфичная культура: {0}</value>
    <comment>Сообщение в логе при обнаружении специфичной культуры. {0} - код культуры.</comment>
  </data>
  <data name="Log_UnhandledExceptionAppDomain" xml:space="preserve">
    <value>Необработанное исключение в AppDomain. Завершение: {0}.</value>
    <comment>Сообщение в логе при фатальной ошибке в AppDomain. {0} - true/false (завершается ли приложение).</comment>
  </data>
  <data name="Log_UnhandledExceptionAppDomain_NoException" xml:space="preserve">
    <value>Необработанное исключение в AppDomain без объекта Exception. Завершение: {0}.</value>
    <comment>Сообщение в логе, если исключение в AppDomain не содержит объект Exception. {0} - true/false.</comment>
  </data>
  <data name="Log_UnhandledExceptionDispatcher" xml:space="preserve">
    <value>Необработанное исключение в Dispatcher (UI поток).</value>
    <comment>Сообщение в логе при фатальной ошибке в UI потоке.</comment>
  </data>
  <data name="MainWindow_Title" xml:space="preserve">
    <value>Поле Чудес</value>
    <comment>Заголовок главного окна приложения.</comment>
  </data>
  <data name="Player_DefaultName" xml:space="preserve">
    <value>Игрок</value>
    <comment>Имя игрока по умолчанию, если не введено.</comment>
  </data>
</root>